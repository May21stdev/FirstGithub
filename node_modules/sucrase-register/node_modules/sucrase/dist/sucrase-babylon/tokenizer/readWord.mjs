// Generated file, do not edit! Run "yarn generate" to re-generate this file.
/* eslint-disable default-case */
import { input, state } from "../parser/base";
import { isIdentifierChar } from "../util/identifier";
import { finishToken } from "./index";
/**
 * Read an identifier, producing either a name token or matching on one of the existing keywords.
 * For performance, we generate a big nested switch statement that can recognize all language
 * keywords, so that we don't need to do any string allocations or hash table lookups to tell when
 * a name token is a keyword.
 */
export default function readWord() {
    switch (input.charCodeAt(state.pos++)) {
        case 82 /* uppercaseR */:
            if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                finishToken(2048 /* name */, 32 /* _React */);
                return;
            }
            break;
        case 97 /* lowercaseA */:
            switch (input.charCodeAt(state.pos++)) {
                case 98 /* lowercaseB */:
                    if (input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                        input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                        input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                        input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                        input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                        input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 1 /* _abstract */);
                        return;
                    }
                    break;
                case 115 /* lowercaseS */:
                    if (!isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 2 /* _as */);
                        return;
                    }
                    if (input.charCodeAt(state.pos++) === 121 /* lowercaseY */ &&
                        input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                        input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 3 /* _async */);
                        return;
                    }
                    break;
                case 119 /* lowercaseW */:
                    if (input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                        input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                        input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 4 /* _await */);
                        return;
                    }
                    break;
            }
            break;
        case 98 /* lowercaseB */:
            if (input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                input.charCodeAt(state.pos++) === 107 /* lowercaseK */ &&
                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                finishToken(29200 /* _break */);
                return;
            }
            break;
        case 99 /* lowercaseC */:
            switch (input.charCodeAt(state.pos++)) {
                case 97 /* lowercaseA */:
                    switch (input.charCodeAt(state.pos++)) {
                        case 115 /* lowercaseS */:
                            if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(29712 /* _case */);
                                return;
                            }
                            break;
                        case 116 /* lowercaseT */:
                            if (input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                                input.charCodeAt(state.pos++) === 104 /* lowercaseH */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(30224 /* _catch */);
                                return;
                            }
                            break;
                    }
                    break;
                case 104 /* lowercaseH */:
                    if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                        input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                        input.charCodeAt(state.pos++) === 107 /* lowercaseK */ &&
                        input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 5 /* _checks */);
                        return;
                    }
                    break;
                case 108 /* lowercaseL */:
                    if (input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                        input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                        input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(41488 /* _class */);
                        return;
                    }
                    break;
                case 111 /* lowercaseO */:
                    if (input.charCodeAt(state.pos++) === 110 /* lowercaseN */) {
                        switch (input.charCodeAt(state.pos++)) {
                            case 115 /* lowercaseS */:
                                if (input.charCodeAt(state.pos++) === 116 /* lowercaseT */) {
                                    if (!isIdentifierChar(input.charCodeAt(state.pos)) &&
                                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                        finishToken(38416 /* _const */);
                                        return;
                                    }
                                    if (input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                                        input.charCodeAt(state.pos++) === 117 /* lowercaseU */ &&
                                        input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                                        input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                                        input.charCodeAt(state.pos++) === 111 /* lowercaseO */ &&
                                        input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                        finishToken(2048 /* name */, 6 /* _constructor */);
                                        return;
                                    }
                                }
                                break;
                            case 116 /* lowercaseT */:
                                if (input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                                    input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                                    input.charCodeAt(state.pos++) === 117 /* lowercaseU */ &&
                                    input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                    !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                    input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                    finishToken(30736 /* _continue */);
                                    return;
                                }
                                break;
                        }
                    }
                    break;
                case 114 /* lowercaseR */:
                    if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */) {
                        if (input.charCodeAt(state.pos++) === 97 /* lowercaseA */) {
                            if (input.charCodeAt(state.pos++) === 116 /* lowercaseT */) {
                                if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */) {
                                    switch (input.charCodeAt(state.pos++)) {
                                        case 67 /* uppercaseC */:
                                            if (input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                                                input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                                                input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                                                input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                                finishToken(2048 /* name */, 33 /* _createClass */);
                                                return;
                                            }
                                            break;
                                        case 82 /* uppercaseR */:
                                            if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                                input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                                                input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                                                input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                                                input.charCodeAt(state.pos++) === 67 /* uppercaseC */ &&
                                                input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                                                input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                                                input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                                                input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                                finishToken(2048 /* name */, 34 /* _createReactClass */);
                                                return;
                                            }
                                            break;
                                    }
                                }
                            }
                        }
                    }
                    break;
            }
            break;
        case 100 /* lowercaseD */:
            switch (input.charCodeAt(state.pos++)) {
                case 101 /* lowercaseE */:
                    switch (input.charCodeAt(state.pos++)) {
                        case 98 /* lowercaseB */:
                            if (input.charCodeAt(state.pos++) === 117 /* lowercaseU */ &&
                                input.charCodeAt(state.pos++) === 103 /* lowercaseG */ &&
                                input.charCodeAt(state.pos++) === 103 /* lowercaseG */ &&
                                input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(31248 /* _debugger */);
                                return;
                            }
                            break;
                        case 99 /* lowercaseC */:
                            if (input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                                input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                                input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                                input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(2048 /* name */, 7 /* _declare */);
                                return;
                            }
                            break;
                        case 102 /* lowercaseF */:
                            if (input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                                input.charCodeAt(state.pos++) === 117 /* lowercaseU */ &&
                                input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                                input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(31760 /* _default */);
                                return;
                            }
                            break;
                        case 108 /* lowercaseL */:
                            if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                                input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(47760 /* _delete */);
                                return;
                            }
                            break;
                    }
                    break;
                case 105 /* lowercaseI */:
                    if (input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                        input.charCodeAt(state.pos++) === 112 /* lowercaseP */ &&
                        input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                        input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                        input.charCodeAt(state.pos++) === 121 /* lowercaseY */ &&
                        input.charCodeAt(state.pos++) === 78 /* uppercaseN */ &&
                        input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                        input.charCodeAt(state.pos++) === 109 /* lowercaseM */ &&
                        input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 35 /* _displayName */);
                        return;
                    }
                    break;
                case 111 /* lowercaseO */:
                    if (!isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(32272 /* _do */);
                        return;
                    }
                    break;
            }
            break;
        case 101 /* lowercaseE */:
            switch (input.charCodeAt(state.pos++)) {
                case 108 /* lowercaseL */:
                    if (input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                        input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(32784 /* _else */);
                        return;
                    }
                    break;
                case 110 /* lowercaseN */:
                    if (input.charCodeAt(state.pos++) === 117 /* lowercaseU */ &&
                        input.charCodeAt(state.pos++) === 109 /* lowercaseM */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 8 /* _enum */);
                        return;
                    }
                    break;
                case 120 /* lowercaseX */:
                    switch (input.charCodeAt(state.pos++)) {
                        case 112 /* lowercaseP */:
                            if (input.charCodeAt(state.pos++) === 111 /* lowercaseO */) {
                                if (input.charCodeAt(state.pos++) === 114 /* lowercaseR */) {
                                    if (input.charCodeAt(state.pos++) === 116 /* lowercaseT */) {
                                        if (!isIdentifierChar(input.charCodeAt(state.pos)) &&
                                            input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                            finishToken(42512 /* _export */);
                                            return;
                                        }
                                        if (input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                                            !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                            input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                            finishToken(2048 /* name */, 9 /* _exports */);
                                            return;
                                        }
                                    }
                                }
                            }
                            break;
                        case 116 /* lowercaseT */:
                            if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                                input.charCodeAt(state.pos++) === 100 /* lowercaseD */ &&
                                input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(42000 /* _extends */);
                                return;
                            }
                            break;
                    }
                    break;
            }
            break;
        case 102 /* lowercaseF */:
            switch (input.charCodeAt(state.pos++)) {
                case 97 /* lowercaseA */:
                    if (input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                        input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                        input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(45072 /* _false */);
                        return;
                    }
                    break;
                case 105 /* lowercaseI */:
                    if (input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                        input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                        input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                        input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                        input.charCodeAt(state.pos++) === 121 /* lowercaseY */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(33296 /* _finally */);
                        return;
                    }
                    break;
                case 111 /* lowercaseO */:
                    if (input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(33808 /* _for */);
                        return;
                    }
                    break;
                case 114 /* lowercaseR */:
                    if (input.charCodeAt(state.pos++) === 111 /* lowercaseO */ &&
                        input.charCodeAt(state.pos++) === 109 /* lowercaseM */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 10 /* _from */);
                        return;
                    }
                    break;
                case 117 /* lowercaseU */:
                    if (input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                        input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                        input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                        input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                        input.charCodeAt(state.pos++) === 111 /* lowercaseO */ &&
                        input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(34320 /* _function */);
                        return;
                    }
                    break;
            }
            break;
        case 103 /* lowercaseG */:
            switch (input.charCodeAt(state.pos++)) {
                case 101 /* lowercaseE */:
                    if (input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 11 /* _get */);
                        return;
                    }
                    break;
                case 108 /* lowercaseL */:
                    if (input.charCodeAt(state.pos++) === 111 /* lowercaseO */ &&
                        input.charCodeAt(state.pos++) === 98 /* lowercaseB */ &&
                        input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                        input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 12 /* _global */);
                        return;
                    }
                    break;
            }
            break;
        case 105 /* lowercaseI */:
            switch (input.charCodeAt(state.pos++)) {
                case 102 /* lowercaseF */:
                    if (!isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(34832 /* _if */);
                        return;
                    }
                    break;
                case 109 /* lowercaseM */:
                    if (input.charCodeAt(state.pos++) === 112 /* lowercaseP */) {
                        switch (input.charCodeAt(state.pos++)) {
                            case 108 /* lowercaseL */:
                                if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                    input.charCodeAt(state.pos++) === 109 /* lowercaseM */ &&
                                    input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                    input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                                    input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                                    input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                                    !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                    input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                    finishToken(2048 /* name */, 13 /* _implements */);
                                    return;
                                }
                                break;
                            case 111 /* lowercaseO */:
                                if (input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                                    input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                                    !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                    input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                    finishToken(43024 /* _import */);
                                    return;
                                }
                                break;
                        }
                    }
                    break;
                case 110 /* lowercaseN */:
                    if (!isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(45592 /* _in */);
                        return;
                    }
                    switch (input.charCodeAt(state.pos++)) {
                        case 102 /* lowercaseF */:
                            if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(2048 /* name */, 14 /* _infer */);
                                return;
                            }
                            break;
                        case 115 /* lowercaseS */:
                            if (input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                                input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                                input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                                input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                                input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                input.charCodeAt(state.pos++) === 111 /* lowercaseO */ &&
                                input.charCodeAt(state.pos++) === 102 /* lowercaseF */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(46104 /* _instanceof */);
                                return;
                            }
                            break;
                        case 116 /* lowercaseT */:
                            if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                                input.charCodeAt(state.pos++) === 102 /* lowercaseF */ &&
                                input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                                input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                                input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(2048 /* name */, 15 /* _interface */);
                                return;
                            }
                            break;
                    }
                    break;
                case 115 /* lowercaseS */:
                    if (!isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 16 /* _is */);
                        return;
                    }
                    break;
            }
            break;
        case 107 /* lowercaseK */:
            if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                input.charCodeAt(state.pos++) === 121 /* lowercaseY */ &&
                input.charCodeAt(state.pos++) === 111 /* lowercaseO */ &&
                input.charCodeAt(state.pos++) === 102 /* lowercaseF */ &&
                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                finishToken(2048 /* name */, 17 /* _keyof */);
                return;
            }
            break;
        case 108 /* lowercaseL */:
            if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                finishToken(37904 /* _let */);
                return;
            }
            break;
        case 109 /* lowercaseM */:
            switch (input.charCodeAt(state.pos++)) {
                case 105 /* lowercaseI */:
                    if (input.charCodeAt(state.pos++) === 120 /* lowercaseX */ &&
                        input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                        input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                        input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 18 /* _mixins */);
                        return;
                    }
                    break;
                case 111 /* lowercaseO */:
                    if (input.charCodeAt(state.pos++) === 100 /* lowercaseD */ &&
                        input.charCodeAt(state.pos++) === 117 /* lowercaseU */ &&
                        input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                        input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 19 /* _module */);
                        return;
                    }
                    break;
            }
            break;
        case 110 /* lowercaseN */:
            switch (input.charCodeAt(state.pos++)) {
                case 97 /* lowercaseA */:
                    if (input.charCodeAt(state.pos++) === 109 /* lowercaseM */ &&
                        input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                        input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                        input.charCodeAt(state.pos++) === 112 /* lowercaseP */ &&
                        input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                        input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                        input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 20 /* _namespace */);
                        return;
                    }
                    break;
                case 101 /* lowercaseE */:
                    if (input.charCodeAt(state.pos++) === 119 /* lowercaseW */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(39952 /* _new */);
                        return;
                    }
                    break;
                case 117 /* lowercaseU */:
                    if (input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                        input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(44048 /* _null */);
                        return;
                    }
                    break;
            }
            break;
        case 111 /* lowercaseO */:
            switch (input.charCodeAt(state.pos++)) {
                case 102 /* lowercaseF */:
                    if (!isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 21 /* _of */);
                        return;
                    }
                    break;
                case 112 /* lowercaseP */:
                    if (input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                        input.charCodeAt(state.pos++) === 113 /* lowercaseQ */ &&
                        input.charCodeAt(state.pos++) === 117 /* lowercaseU */ &&
                        input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 22 /* _opaque */);
                        return;
                    }
                    break;
            }
            break;
        case 112 /* lowercaseP */:
            switch (input.charCodeAt(state.pos++)) {
                case 114 /* lowercaseR */:
                    switch (input.charCodeAt(state.pos++)) {
                        case 105 /* lowercaseI */:
                            if (input.charCodeAt(state.pos++) === 118 /* lowercaseV */ &&
                                input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                                input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                                input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(2048 /* name */, 23 /* _private */);
                                return;
                            }
                            break;
                        case 111 /* lowercaseO */:
                            if (input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                                input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                                input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                                input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                input.charCodeAt(state.pos++) === 100 /* lowercaseD */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(2048 /* name */, 24 /* _protected */);
                                return;
                            }
                            break;
                    }
                    break;
                case 117 /* lowercaseU */:
                    if (input.charCodeAt(state.pos++) === 98 /* lowercaseB */ &&
                        input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                        input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                        input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 25 /* _public */);
                        return;
                    }
                    break;
            }
            break;
        case 114 /* lowercaseR */:
            if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */) {
                switch (input.charCodeAt(state.pos++)) {
                    case 97 /* lowercaseA */:
                        if (input.charCodeAt(state.pos++) === 100 /* lowercaseD */ &&
                            input.charCodeAt(state.pos++) === 111 /* lowercaseO */ &&
                            input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                            input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                            input.charCodeAt(state.pos++) === 121 /* lowercaseY */ &&
                            !isIdentifierChar(input.charCodeAt(state.pos)) &&
                            input.charCodeAt(state.pos) !== 92 /* backslash */) {
                            finishToken(2048 /* name */, 26 /* _readonly */);
                            return;
                        }
                        break;
                    case 113 /* lowercaseQ */:
                        if (input.charCodeAt(state.pos++) === 117 /* lowercaseU */ &&
                            input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                            input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                            input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                            !isIdentifierChar(input.charCodeAt(state.pos)) &&
                            input.charCodeAt(state.pos) !== 92 /* backslash */) {
                            finishToken(2048 /* name */, 27 /* _require */);
                            return;
                        }
                        break;
                    case 116 /* lowercaseT */:
                        if (input.charCodeAt(state.pos++) === 117 /* lowercaseU */ &&
                            input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                            input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                            !isIdentifierChar(input.charCodeAt(state.pos)) &&
                            input.charCodeAt(state.pos) !== 92 /* backslash */) {
                            finishToken(35344 /* _return */);
                            return;
                        }
                        break;
                }
            }
            break;
        case 115 /* lowercaseS */:
            switch (input.charCodeAt(state.pos++)) {
                case 101 /* lowercaseE */:
                    if (input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 28 /* _set */);
                        return;
                    }
                    break;
                case 116 /* lowercaseT */:
                    if (input.charCodeAt(state.pos++) === 97 /* lowercaseA */ &&
                        input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                        input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                        input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(2048 /* name */, 29 /* _static */);
                        return;
                    }
                    break;
                case 117 /* lowercaseU */:
                    if (input.charCodeAt(state.pos++) === 112 /* lowercaseP */ &&
                        input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                        input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(40976 /* _super */);
                        return;
                    }
                    break;
                case 119 /* lowercaseW */:
                    if (input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                        input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                        input.charCodeAt(state.pos++) === 99 /* lowercaseC */ &&
                        input.charCodeAt(state.pos++) === 104 /* lowercaseH */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(35856 /* _switch */);
                        return;
                    }
                    break;
            }
            break;
        case 116 /* lowercaseT */:
            switch (input.charCodeAt(state.pos++)) {
                case 104 /* lowercaseH */:
                    switch (input.charCodeAt(state.pos++)) {
                        case 105 /* lowercaseI */:
                            if (input.charCodeAt(state.pos++) === 115 /* lowercaseS */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(40464 /* _this */);
                                return;
                            }
                            break;
                        case 114 /* lowercaseR */:
                            if (input.charCodeAt(state.pos++) === 111 /* lowercaseO */ &&
                                input.charCodeAt(state.pos++) === 119 /* lowercaseW */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(36496 /* _throw */);
                                return;
                            }
                            break;
                    }
                    break;
                case 114 /* lowercaseR */:
                    switch (input.charCodeAt(state.pos++)) {
                        case 117 /* lowercaseU */:
                            if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(44560 /* _true */);
                                return;
                            }
                            break;
                        case 121 /* lowercaseY */:
                            if (!isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(36880 /* _try */);
                                return;
                            }
                            break;
                    }
                    break;
                case 121 /* lowercaseY */:
                    if (input.charCodeAt(state.pos++) === 112 /* lowercaseP */) {
                        if (input.charCodeAt(state.pos++) === 101 /* lowercaseE */) {
                            if (!isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(2048 /* name */, 30 /* _type */);
                                return;
                            }
                            if (input.charCodeAt(state.pos++) === 111 /* lowercaseO */ &&
                                input.charCodeAt(state.pos++) === 102 /* lowercaseF */ &&
                                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                                finishToken(46736 /* _typeof */);
                                return;
                            }
                        }
                    }
                    break;
            }
            break;
        case 117 /* lowercaseU */:
            if (input.charCodeAt(state.pos++) === 110 /* lowercaseN */ &&
                input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                input.charCodeAt(state.pos++) === 113 /* lowercaseQ */ &&
                input.charCodeAt(state.pos++) === 117 /* lowercaseU */ &&
                input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                finishToken(2048 /* name */, 31 /* _unique */);
                return;
            }
            break;
        case 118 /* lowercaseV */:
            switch (input.charCodeAt(state.pos++)) {
                case 97 /* lowercaseA */:
                    if (input.charCodeAt(state.pos++) === 114 /* lowercaseR */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(37392 /* _var */);
                        return;
                    }
                    break;
                case 111 /* lowercaseO */:
                    if (input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                        input.charCodeAt(state.pos++) === 100 /* lowercaseD */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(47248 /* _void */);
                        return;
                    }
                    break;
            }
            break;
        case 119 /* lowercaseW */:
            switch (input.charCodeAt(state.pos++)) {
                case 104 /* lowercaseH */:
                    if (input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                        input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                        input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(38928 /* _while */);
                        return;
                    }
                    break;
                case 105 /* lowercaseI */:
                    if (input.charCodeAt(state.pos++) === 116 /* lowercaseT */ &&
                        input.charCodeAt(state.pos++) === 104 /* lowercaseH */ &&
                        !isIdentifierChar(input.charCodeAt(state.pos)) &&
                        input.charCodeAt(state.pos) !== 92 /* backslash */) {
                        finishToken(39440 /* _with */);
                        return;
                    }
                    break;
            }
            break;
        case 121 /* lowercaseY */:
            if (input.charCodeAt(state.pos++) === 105 /* lowercaseI */ &&
                input.charCodeAt(state.pos++) === 101 /* lowercaseE */ &&
                input.charCodeAt(state.pos++) === 108 /* lowercaseL */ &&
                input.charCodeAt(state.pos++) === 100 /* lowercaseD */ &&
                !isIdentifierChar(input.charCodeAt(state.pos)) &&
                input.charCodeAt(state.pos) !== 92 /* backslash */) {
                finishToken(43536 /* _yield */);
                return;
            }
            break;
    }
    state.pos--;
    while (state.pos < input.length) {
        const ch = input.charCodeAt(state.pos);
        if (isIdentifierChar(ch)) {
            state.pos++;
        }
        else if (ch === 92 /* backslash */) {
            // \u
            state.pos += 2;
            if (input.charCodeAt(state.pos) === 123 /* leftCurlyBrace */) {
                while (input.charCodeAt(state.pos) !== 123 /* leftCurlyBrace */) {
                    state.pos++;
                }
                state.pos++;
            }
        }
        else if (ch === 64 /* atSign */ && input.charCodeAt(state.pos + 1) === 64 /* atSign */) {
            state.pos += 2;
        }
        else {
            break;
        }
    }
    finishToken(2048 /* name */);
}
