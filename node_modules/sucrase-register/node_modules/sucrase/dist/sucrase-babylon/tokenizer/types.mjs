export function formatTokenType(tokenType) {
    switch (tokenType) {
        case 0 /* num */:
            return "num";
        case 512 /* bigint */:
            return "bigint";
        case 1024 /* regexp */:
            return "regexp";
        case 1536 /* string */:
            return "string";
        case 2048 /* name */:
            return "name";
        case 2560 /* eof */:
            return "eof";
        case 3072 /* bracketL */:
            return "[";
        case 3584 /* bracketR */:
            return "]";
        case 4096 /* braceL */:
            return "{";
        case 4608 /* braceBarL */:
            return "{|";
        case 5120 /* braceR */:
            return "}";
        case 5632 /* braceBarR */:
            return "|}";
        case 6144 /* parenL */:
            return "(";
        case 6656 /* parenR */:
            return ")";
        case 7168 /* comma */:
            return ",";
        case 7680 /* semi */:
            return ";";
        case 8192 /* colon */:
            return ":";
        case 8704 /* doubleColon */:
            return "::";
        case 9216 /* dot */:
            return ".";
        case 9728 /* question */:
            return "?";
        case 10240 /* questionDot */:
            return "?.";
        case 10752 /* arrow */:
            return "=>";
        case 11264 /* template */:
            return "template";
        case 11776 /* ellipsis */:
            return "...";
        case 12288 /* backQuote */:
            return "`";
        case 12800 /* dollarBraceL */:
            return "${";
        case 13312 /* at */:
            return "@";
        case 13824 /* hash */:
            return "#";
        case 14368 /* eq */:
            return "=";
        case 14880 /* assign */:
            return "_=";
        case 15744 /* incDec */:
            return "++/--";
        case 16000 /* bang */:
            return "!";
        case 16512 /* tilde */:
            return "~";
        case 16897 /* pipeline */:
            return "|>";
        case 17410 /* nullishCoalescing */:
            return "??";
        case 17922 /* logicalOR */:
            return "||";
        case 18435 /* logicalAND */:
            return "&&";
        case 18948 /* bitwiseOR */:
            return "|";
        case 19461 /* bitwiseXOR */:
            return "^";
        case 19974 /* bitwiseAND */:
            return "&";
        case 20487 /* equality */:
            return "==/!=";
        case 21000 /* lessThan */:
            return "<";
        case 21512 /* greaterThan */:
            return ">";
        case 22024 /* relationalOrEqual */:
            return "<=/>=";
        case 22537 /* bitShift */:
            return "<</>>";
        case 23178 /* plus */:
            return "+";
        case 23690 /* minus */:
            return "-";
        case 24075 /* modulo */:
            return "%";
        case 24587 /* star */:
            return "*";
        case 25099 /* slash */:
            return "/";
        case 25676 /* exponent */:
            return "**";
        case 26112 /* jsxName */:
            return "jsxName";
        case 26624 /* jsxText */:
            return "jsxText";
        case 27136 /* jsxTagStart */:
            return "jsxTagStart";
        case 27648 /* jsxTagEnd */:
            return "jsxTagEnd";
        case 28160 /* typeParameterStart */:
            return "typeParameterStart";
        case 28672 /* nonNullAssertion */:
            return "nonNullAssertion";
        case 29200 /* _break */:
            return "break";
        case 29712 /* _case */:
            return "case";
        case 30224 /* _catch */:
            return "catch";
        case 30736 /* _continue */:
            return "continue";
        case 31248 /* _debugger */:
            return "debugger";
        case 31760 /* _default */:
            return "default";
        case 32272 /* _do */:
            return "do";
        case 32784 /* _else */:
            return "else";
        case 33296 /* _finally */:
            return "finally";
        case 33808 /* _for */:
            return "for";
        case 34320 /* _function */:
            return "function";
        case 34832 /* _if */:
            return "if";
        case 35344 /* _return */:
            return "return";
        case 35856 /* _switch */:
            return "switch";
        case 36496 /* _throw */:
            return "throw";
        case 36880 /* _try */:
            return "try";
        case 37392 /* _var */:
            return "var";
        case 37904 /* _let */:
            return "let";
        case 38416 /* _const */:
            return "const";
        case 38928 /* _while */:
            return "while";
        case 39440 /* _with */:
            return "with";
        case 39952 /* _new */:
            return "new";
        case 40464 /* _this */:
            return "this";
        case 40976 /* _super */:
            return "super";
        case 41488 /* _class */:
            return "class";
        case 42000 /* _extends */:
            return "extends";
        case 42512 /* _export */:
            return "export";
        case 43024 /* _import */:
            return "import";
        case 43536 /* _yield */:
            return "yield";
        case 44048 /* _null */:
            return "null";
        case 44560 /* _true */:
            return "true";
        case 45072 /* _false */:
            return "false";
        case 45592 /* _in */:
            return "in";
        case 46104 /* _instanceof */:
            return "instanceof";
        case 46736 /* _typeof */:
            return "typeof";
        case 47248 /* _void */:
            return "void";
        case 47760 /* _delete */:
            return "delete";
        case 48144 /* _async */:
            return "async";
        case 48656 /* _get */:
            return "get";
        case 49168 /* _set */:
            return "set";
        case 49680 /* _declare */:
            return "declare";
        case 50192 /* _readonly */:
            return "readonly";
        case 50704 /* _abstract */:
            return "abstract";
        case 51216 /* _static */:
            return "static";
        case 51728 /* _public */:
            return "public";
        case 52240 /* _private */:
            return "private";
        case 52752 /* _protected */:
            return "protected";
        case 53264 /* _as */:
            return "as";
        case 53776 /* _enum */:
            return "enum";
        case 54288 /* _type */:
            return "type";
        case 54800 /* _implements */:
            return "implements";
        default:
            return "";
    }
}
